/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 dreamtemple.glb --transform -R 4096 -O 
Files: dreamtemple.glb [14.57MB] > /Users/eric/codeprojects/Watercolors/public/glb/dreamtemple.glb [14.57MB] (0%)
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Model(props) {
  const { scene } = useGLTF('/dreamtemple.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  return (
    <group {...props} dispose={null}>
      <group position={[0, -0.301, 12.429]} rotation={[0, 1.571, 0]} scale={0.054}>
        <group position={[-87.495, 0, 26.533]} rotation={[-Math.PI / 2, 0, 0]}>
          <mesh geometry={nodes.Object_10.geometry} material={materials.Leaf_3} />
          <mesh geometry={nodes.Object_8.geometry} material={materials.Branch} />
          <mesh geometry={nodes.Object_9.geometry} material={materials.Leaf_2} />
        </group>
        <group position={[32.682, 0, -20.577]} rotation={[-Math.PI / 2, 0, 0]}>
          <mesh geometry={nodes.Object_12.geometry} material={materials.Branch} />
          <mesh geometry={nodes.Object_13.geometry} material={materials.Leaf_2} />
          <mesh geometry={nodes.Object_14.geometry} material={materials.Leaf_3} />
        </group>
        <group position={[81.319, 0, 20.443]} rotation={[-Math.PI / 2, 0, 0]}>
          <mesh geometry={nodes.Object_16.geometry} material={materials.Branch} />
          <mesh geometry={nodes.Object_17.geometry} material={materials.Leaf_2} />
          <mesh geometry={nodes.Object_18.geometry} material={materials.Leaf_3} />
        </group>
        <group rotation={[-Math.PI / 2, 0, 0]}>
          <mesh geometry={nodes.Object_6.geometry} material={materials['13_-_Default']} position={[-56.701, -22.578, 48.269]} />
        </group>
        <group rotation={[-Math.PI / 2, 0, 0]}>
          <mesh geometry={nodes.Object_21.geometry} material={materials['15_-_Default']} position={[-56.701, -22.578, 48.269]} />
        </group>
      </group>
      <spotLight intensity={0.544} angle={Math.PI / 8} penumbra={0.15} decay={2} position={[-2.808, 2.221, -3.147]} rotation={[-0.338, 0, 0]} target={nodes.Spot.target}>
        <primitive object={nodes.Spot.target} position={[0, 0, -1]} />
      </spotLight>
      <spotLight intensity={0.544} angle={Math.PI / 8} penumbra={0.15} decay={2} position={[2.752, 2.221, 27.74]} rotation={[-2.803, 0, -Math.PI]} target={nodes.Spot001.target}>
        <primitive object={nodes.Spot001.target} position={[0, 0, -1]} />
      </spotLight>
      <mesh geometry={nodes.ground.geometry} material={materials.ground} position={[0, -26.606, 0]} scale={178.405} />
      <mesh geometry={nodes.LeftSpeaker.geometry} material={nodes.LeftSpeaker.material} position={[-2.772, 0.505, -3.996]} rotation={[-Math.PI, 0.615, -Math.PI]} scale={[0.623, 0.89, 0.623]} />
      <mesh geometry={nodes.Screen.geometry} material={materials.sculpture} rotation={[Math.PI, 0, Math.PI]} />
      <mesh geometry={nodes.SculptureLeft.geometry} material={materials.sculpture} position={[-2.762, 1.031, -3.957]} rotation={[Math.PI / 2, 0, 1.477]} scale={0.011} />
      <mesh geometry={nodes.Temple.geometry} material={materials.TempleMaterial} rotation={[Math.PI, 0, Math.PI]} />
    </group>
  )
}

useGLTF.preload('/dreamtemple.glb')
